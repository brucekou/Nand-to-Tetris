// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	Add16(a=outR, b[0]=true, b[1..15]=false, out=outAdd);
	Mux16(a=outR, b=outAdd, sel=inc, out=outAddF);
	
	Mux16(a=outAddF, b=in, sel=load, out=outLoad);
	Mux16(a=outLoad, b=false, sel=reset, out=outReset);
		
	//load bit enabled when either of them is enabled.
	Or(a=reset, b=load, out=outOr);
	Or(a=outOr, b=inc, out=loadF);
	//finally send to register
	Register(in=outReset, load=loadF, out=out, out=outR);
}
